{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","renderTableHeader","Object","keys","state","users","map","attr","toUpperCase","renderTableRows","user","id","name","username","email","address","street","city","phone","website","company","isLoading","isError","a","this","setState","fetch","response","ok","json","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PA8EeA,E,kDA3Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAqBRC,kBAAoB,WAClB,OAAOC,OAAOC,KAAK,EAAKC,MAAMC,MAAM,IAAIC,KAAI,SAAAC,GAAI,OAAI,6BAAgBA,EAAKC,eAAZD,OAvB5C,EA0BnBE,gBAAkB,WAChB,OAAO,EAAKL,MAAMC,MAAMC,KAAI,SAAAI,GAC1B,OACE,+BACE,6BAAKA,EAAKC,KACV,6BAAKD,EAAKE,OACV,6BAAKF,EAAKG,WACV,6BAAKH,EAAKI,QACV,uCAAQJ,EAAKK,QAAQC,OAArB,aAAgCN,EAAKK,QAAQE,QAC7C,6BAAKP,EAAKQ,QACV,6BAAKR,EAAKS,UACV,6BAAKT,EAAKU,QAAQR,SARXF,EAAKC,QA3BlB,EAAKP,MAAQ,CACXC,MAAO,GACPgB,WAAW,EACXC,SAAS,GALM,E,4FAUnB,8BAAAC,EAAA,6DACEC,KAAKC,SAAS,CAAEJ,WAAW,IAD7B,SAEyBK,MAAM,8CAF/B,YAEQC,EAFR,QAIeC,GAJf,iCAKwBD,EAASE,OALjC,OAKUxB,EALV,OAMImB,KAAKC,SAAS,CAAEpB,QAAOgB,WAAW,IANtC,wBAQIG,KAAKC,SAAS,CAAEH,SAAS,EAAMD,WAAW,IAR9C,iD,0EAiCA,WAAW,IAAD,EAC4BG,KAAKpB,MAAlCC,EADC,EACDA,MAAOgB,EADN,EACMA,UAAWC,EADjB,EACiBA,QAEzB,OAAID,EACK,6CAGNC,EACM,2CAGFjB,EAAMyB,OAAS,EAElB,kCACE,gCACE,6BACGN,KAAKvB,wBAGV,gCACGuB,KAAKf,uBAIV,gD,GApEUsB,aCUHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aba44cf5.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      users: [],\n      isLoading: false,\n      isError: false\n    }\n  }\n\n  //async function get request\n  async componentDidMount() {\n    this.setState({ isLoading: true })\n    const response = await fetch('https://jsonplaceholder.typicode.com/users')\n  \n    if (response.ok) {\n      const users = await response.json()\n      this.setState({ users, isLoading: false })\n    } else {\n      this.setState({ isError: true, isLoading: false })\n    }\n  }\n\n  renderTableHeader = () => {\n    return Object.keys(this.state.users[0]).map(attr => <th key={attr}>{attr.toUpperCase()}</th>)\n  }\n\n  renderTableRows = () => {\n    return this.state.users.map(user => {\n      return (\n        <tr key={user.id}>\n          <td>{user.id}</td>\n          <td>{user.name}</td>\n          <td>{user.username}</td>\n          <td>{user.email}</td>\n          <td>{`${user.address.street}, ${user.address.city}`}</td>\n          <td>{user.phone}</td>\n          <td>{user.website}</td>\n          <td>{user.company.name}</td>\n        </tr>\n      )\n    })\n  }\n  \n  render () {\n    const {users, isLoading, isError} = this.state\n\n    if (isLoading){\n      return <div>Loading...</div>\n    }\n\n    if(isError){\n      return <div>Error...</div>\n    }\n\n    return users.length > 0\n      ? (\n        <table>\n          <thead>\n            <tr>\n              {this.renderTableHeader()}\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderTableRows()}\n          </tbody>\n        </table>\n      ) : (\n        <div>\n          No users.\n      </div>\n      )\n    \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}